stages:
  - build
  - deploy

frontend:
  image: node:12.18-alpine3.12
  stage: build
  script:
    #git  is required for yarn to be able to checkout the shared components
    - apk add --no-cache git
    - sh ./ci-build/setup_headers.sh 
    - cd frontend
    - yarn install
    - yarn lint
    - yarn test
    - yarn build:prod
  cache:
    key: ${CI_COMMIT_REF_SLUG}-node
    paths:
      - frontend/node_modules/
  artifacts:
    paths:
      - public/javascripts/bundle.js
    reports:
      junit: frontend/junit.xml
  tags:
    - gnm
    - docker
  only:
    - master
    - merge_requests

postruns:
  image: registry.gitlab.com/codmill/customer-projects/guardian/pluto-core/projectlockerbuild:20210302_1
  stage: build
  script:
    - mkdir -p jython_junit
    - ~/jython/bin/pip install -r postrun/requirements.txt
    - mkdir -p postrun/lib/python
    - cp -a ~/jython/Lib postrun/lib/python
    - tar c postrun/lib/python | gzip > postrunlibs.tgz
    - PYTHONPATH=postrun/scripts ~/jython/bin/nosetests -w postrun/tests --with-xunit --xunit-file=jython_junit/junit.xml
  cache:
    key: ${CI_COMMIT_REF_SLUG}-jython
    paths:
    - postrun/lib/python
  artifacts:
    paths:
      - postrunlibs.tgz
    reports:
      junit: jython_junit/junit.xml
  tags:
    - gnm
    - docker
  only:
    - master
    - merge_requests

backend:
  image: registry.gitlab.com/codmill/customer-projects/guardian/pluto-core/projectlockerbuild:20210302_1
  stage: build
  services:
    - postgres:9.6
  variables:
    POSTGRES_DB: projectlocker_test
    POSTGRES_USER: projectlocker
    POSTGRES_PASSWORD: projectlocker
    POSTGRES_HOST_AUTH_METHOD: trust
    TEST_DB_URL: jdbc:postgresql://postgres:5432/projectlocker_test?user=projectlocker
    DEFAULT_DB_URL: jdbc:postgresql://postgres:5432/projectlocker?user=projectlocker
    TEST_DB_PROPERTIES_URL: jdbc:postgresql://postgres:5432/projectlocker_test?user=projectlocker&password=projectlocker&connectTimeout=30
    DEFAULT_DB_PROPERTIES_URL: jdbc:postgresql://postgres:5432/postgres?user=projectlocker&password=projectlocker
    JAVA_OPTS: -Dsbt.ivy.home=./.ivy2 -Divy.home=./.ivy2
    SBT_JUNIT_OUTPUT: ./junit-tests
  script:
    - if [ -d ".sbt" ]; then rm -rf ${HOME}/.sbt; mv .sbt ${HOME}; fi
    - if [ ! -d "junit-tests" ]; then mkdir junit-tests; fi
    - sbt test:compile
    - sbt test
    - mv ${HOME}/.sbt .sbt || true
    - mv /tmp/pluto-core-testing.log . || /bin/true
  artifacts:
    paths:
      - pluto-core-testing.log
    reports:
      junit: junit-tests/*.xml
  cache:
    key: ${CI_COMMIT_REF_SLUG}-sbt
    paths:
      - target/
      - .sbt/
      - .ivy2/
  tags:
    - gnm
    - docker
  only:
    - master
    - merge_requests
  

deploy:
  image: registry.gitlab.com/codmill/customer-projects/guardian/pluto-core/projectlockerbuild:20210302_1
  stage: deploy
  services:
    - docker:19.03.11-dind
  variables:
    DOCKER_TLS_CERTDIR: "/certs" #this is mounted by the gitlab CI system so is populated from the dind service
    DOCKER_HOST: tcp://docker:2376
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_VERIFY: 1
    JAVA_OPTS: -Dsbt.ivy.home=./.ivy2 -Divy.home=./.ivy2
  script:
    - if [ -d ".sbt" ]; then rm -rf ${HOME}/.sbt; mv .sbt ${HOME}; fi
    - ls -lhd /certs
    - ls -lh /certs/*
    - mkdir ~/.docker && cp -a /certs/client/*.pem ~/.docker
    - docker version
    - tar xzf postrunlibs.tgz
    - docker login -u "${DOCKER_USER}" -p "${DOCKER_PAT}"
    - JAVA_OPTS="-Dbuild.number=${CI_PIPELINE_IID} -Ddocker.username=guardianmultimedia" sbt docker:publish
    - cd periodic_trigger && docker build . -t guardianmultimedia/pluto-core-periodictrigger:${CI_PIPELINE_IID}
    - docker push guardianmultimedia/pluto-core-periodictrigger:${CI_PIPELINE_IID}
  cache:
    key: ${CI_COMMIT_REF_SLUG}-sbt
    policy: pull
    paths:
      - target/
  tags:
    - gnm
    - docker
  only:
    - master
    - merge_requests
